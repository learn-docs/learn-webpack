(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{581:function(e,a,r){"use strict";r.r(a);var t=r(9),o=Object(t.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("blockquote",[r("p",[e._v("点击勘误"),r("a",{attrs:{href:"https://github.com/webVueBlog/learn-webpack/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issues"),r("OutboundLink")],1),e._v("，哪吒感谢大家的阅读")])]),e._v(" "),r("h2",{attrs:{id:"loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[e._v("#")]),e._v(" loader")]),e._v(" "),r("p",[e._v('loader 用于对模块的源代码进行转换。loader 可以使你在 import 或 "load(加载)" 模块时预处理文件。因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的得力方式。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript 或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS 文件！')]),e._v(" "),r("h2",{attrs:{id:"解析-loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解析-loader"}},[e._v("#")]),e._v(" 解析 loader")]),e._v(" "),r("p",[e._v("loader 遵循标准 模块解析 规则。多数情况下，loader 将从 模块路径 加载（通常是从 npm install, node_modules 进行加载）。")]),e._v(" "),r("p",[e._v("我们预期 loader 模块导出为一个函数，并且编写为 Node.js 兼容的 JavaScript。通常使用 npm 进行管理 loader，但是也可以将应用程序中的文件作为自定义 loader。按照约定，loader 通常被命名为 xxx-loader（例如 json-loader）。")])])}),[],!1,null,null,null);a.default=o.exports}}]);